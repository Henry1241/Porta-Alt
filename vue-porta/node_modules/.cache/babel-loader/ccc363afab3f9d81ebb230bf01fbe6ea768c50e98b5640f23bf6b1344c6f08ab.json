{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-13749ed9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"property-info-view\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Información de la Propiedad\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Dashboard = _resolveComponent(\"Dashboard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Dashboard), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, $data.property ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, _toDisplayString($data.property.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Precio: $\" + _toDisplayString($data.property.price), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Dormitorios: \" + _toDisplayString($data.property.bedrooms), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Baños: \" + _toDisplayString($data.property.bathrooms), 1 /* TEXT */), _createCommentVNode(\" Otros detalles de la propiedad... \")])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_Fragment","_createVNode","_component_Dashboard","_hoisted_1","_hoisted_2","$data","property","_hoisted_3","_toDisplayString","name","price","bedrooms","bathrooms","_createCommentVNode"],"sources":["D:\\porta-inmobiliaria\\Porta-Alt\\vue-porta\\src\\views\\ProprietyInfoView.vue"],"sourcesContent":["<template>\r\n    <Dashboard/>\r\n    <div class=\"property-info-view\">\r\n      <h2>Información de la Propiedad</h2>\r\n      <div v-if=\"property\">\r\n        <h3>{{ property.name }}</h3>\r\n        <p>Precio: ${{ property.price }}</p>\r\n        <p>Dormitorios: {{ property.bedrooms }}</p>\r\n        <p>Baños: {{ property.bathrooms }}</p>\r\n        <!-- Otros detalles de la propiedad... -->\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'ProprietyInfoView',\r\n  props: ['id'], // Recibe el ID de la propiedad como prop\r\n  data() {\r\n    return {\r\n      property: null // Almacenará los detalles de la propiedad\r\n    }\r\n  },\r\n  mounted() {\r\n    // Llama al método para obtener los detalles de la propiedad cuando se monta el componente\r\n    this.getPropertyDetails(this.id);\r\n  },\r\n  methods: {\r\n    // Método para obtener los detalles de la propiedad\r\n    getPropertyDetails(id) {\r\n      // Ejemplo de datos estáticos\r\n      const properties = [\r\n        { id: 1, name: \"Cozy Apartment\", price: 150000, bedrooms: 2, bathrooms: 1 },\r\n        { id: 2, name: \"Spacious House\", price: 300000, bedrooms: 4, bathrooms: 3 },\r\n        { id: 3, name: \"Luxury Villa\", price: 750000, bedrooms: 6, bathrooms: 4 }\r\n      ];\r\n      \r\n      // Encuentra la propiedad por ID\r\n      this.property = properties.find(property => property.id === parseInt(id));\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos específicos para la vista de información de la propiedad */\r\n.property-info-view {\r\n  display: flex;\r\n  flex-direction: column; /* Alineación vertical */\r\n  width: 600px; /* Ancho del contenedor */\r\n  margin: 0 auto; /* Centrar el contenedor horizontalmente */\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n}\r\n\r\n.property-info-view h2 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: #333;\r\n}\r\n\r\n.property-info-view h3 {\r\n  margin-bottom: 10px;\r\n  font-size: 1.6rem;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\n.property-info-view p {\r\n  margin-bottom: 5px;\r\n  font-size: 1rem;\r\n  line-height: 1.6;\r\n  color: #666;\r\n}\r\n\r\n/* Estilos para detalles de la propiedad */\r\n.property-details {\r\n  display: flex;\r\n  flex-wrap: wrap; /* Permite que los elementos se ajusten en varias filas si es necesario */\r\n  justify-content: space-between; /* Distribuye los elementos uniformemente */\r\n}\r\n\r\n.property-details p {\r\n  flex: 1; /* Ocupa el espacio disponible */\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* Estilo para la propiedad \"Garaje\" */\r\n.property-details p:last-child {\r\n  text-align: right; /* Alinea el texto a la derecha */\r\n}\r\n\r\n</style>\r\n"],"mappings":";;;EAESA,KAAK,EAAC;AAAoB;gEAC7BC,mBAAA,CAAoC,YAAhC,6BAA2B;;EAHrCC,GAAA;AAAA;;;uBAAAC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAYC,oBAAA,GACZL,mBAAA,CASM,OATNM,UASM,GARJC,UAAoC,EACzBC,KAAA,CAAAC,QAAQ,I,cAAnBP,mBAAA,CAMM,OAVZQ,UAAA,GAKQV,mBAAA,CAA4B,YAAAW,gBAAA,CAArBH,KAAA,CAAAC,QAAQ,CAACG,IAAI,kBACpBZ,mBAAA,CAAoC,WAAjC,WAAS,GAAAW,gBAAA,CAAGH,KAAA,CAAAC,QAAQ,CAACI,KAAK,kBAC7Bb,mBAAA,CAA2C,WAAxC,eAAa,GAAAW,gBAAA,CAAGH,KAAA,CAAAC,QAAQ,CAACK,QAAQ,kBACpCd,mBAAA,CAAsC,WAAnC,SAAO,GAAAW,gBAAA,CAAGH,KAAA,CAAAC,QAAQ,CAACM,SAAS,kBAC/BC,mBAAA,uCAA0C,C,KATlDA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}